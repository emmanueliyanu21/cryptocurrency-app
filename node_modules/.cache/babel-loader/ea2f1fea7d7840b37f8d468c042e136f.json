{"ast":null,"code":"import _slicedToArray from \"/Users/emmanueliyanu/Documents/React-Apps/Crypto/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/emmanueliyanu/Documents/React-Apps/Crypto/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Dimmer, Loader, Select } from 'semantic-ui-react';\n\nconst App = () => {\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        loading = _useState2[0],\n        setloading = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        priceData = _useState4[0],\n        setpriceData = _useState4[1];\n\n  const _useState5 = useState(\"USD\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        currency = _useState6[0],\n        setCurrency = _useState6[1];\n\n  useEffect(() => {\n    async function fetchData() {\n      const res = await fetch('https://api.coindesk.com/v1/bpi/currentprice.json');\n      const data = await res.json();\n      setpriceData(data.bpi);\n      setloading(false);\n    }\n\n    fetchData();\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"nav\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Coindesk API Data\"), loading ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Dinner, {\n    active: true,\n    inverted: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Loading\"))) : React.createElement(\"div\", {\n    className: \"price-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Select, {\n    placeholder: \"Select your currency\",\n    onChange: handleSelect,\n    options: options,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/emmanueliyanu/Documents/React-Apps/Crypto/src/App.js"],"names":["React","useEffect","useState","Dimmer","Loader","Select","App","loading","setloading","priceData","setpriceData","currency","setCurrency","fetchData","res","fetch","data","json","bpi","handleSelect","options"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,MAAzB,QAAsC,mBAAtC;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA,oBACcJ,QAAQ,CAAC,IAAD,CADtB;AAAA;AAAA,QACTK,OADS;AAAA,QACAC,UADA;;AAAA,qBAEkBN,QAAQ,CAAC,IAAD,CAF1B;AAAA;AAAA,QAETO,SAFS;AAAA,QAEEC,YAFF;;AAAA,qBAGgBR,QAAQ,CAAC,KAAD,CAHxB;AAAA;AAAA,QAGTS,QAHS;AAAA,QAGCC,WAHD;;AAKhBX,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeY,SAAf,GAA2B;AACzB,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,mDAAD,CAAvB;AACA,YAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACAP,MAAAA,YAAY,CAACM,IAAI,CAACE,GAAN,CAAZ;AACAV,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;;AACDK,IAAAA,SAAS;AACV,GARQ,EAQN,EARM,CAAT;AAUA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAKIN,OAAO,GACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,MAAM,MAAd;AAAe,IAAA,QAAQ,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF,CADK,GAQH;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAC,sBAApB;AAA2C,IAAA,QAAQ,EAAEY,YAArD;AAAmE,IAAA,OAAO,EAAEC,OAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAbR,CADF;AAqBD,CApCD;;AAsCA,eAAed,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Dimmer, Loader, Select} from 'semantic-ui-react' \n\nconst App = () => {\n  const [loading, setloading] = useState(true);\n  const [priceData, setpriceData] = useState(null);\n  const [currency, setCurrency] = useState(\"USD\");\n\n  useEffect(() => {\n    async function fetchData() {\n      const res = await fetch('https://api.coindesk.com/v1/bpi/currentprice.json')\n      const data = await res.json();\n      setpriceData(data.bpi);\n      setloading(false);\n    }\n    fetchData();\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <div className=\"nav\" >\n        Coindesk API Data\n        </div>\n      {\n        loading ? (\n          <div>\n            <Dinner active inverted>\n              <Loader>Loading</Loader>\n            </Dinner>\n          </div>\n\n        ) : (\n            <div className=\"price-container\">\n              <Select placeholder=\"Select your currency\" onChange={handleSelect} options={options}></Select>\n            </div>\n          )\n      }\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}